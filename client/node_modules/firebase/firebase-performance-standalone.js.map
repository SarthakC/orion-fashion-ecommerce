{"version":3,"file":"firebase-performance-standalone.js","sources":["../../node_modules/tslib/tslib.es6.js","../util/src/deepCopy.ts","../util/src/deferred.ts","../util/src/errors.ts","../util/src/obj.ts","../component/src/component.ts","../component/src/constants.ts","../component/src/provider.ts","../component/src/component_container.ts","../logger/src/logger.ts","../app/src/errors.ts","../app/src/constants.ts","../app/src/lite/firebaseAppLite.ts","../app/src/logger.ts","../app/src/firebaseNamespaceCore.ts","../app/index.lite.ts","../app/src/lite/firebaseNamespaceLite.ts","../../node_modules/idb/lib/idb.mjs","../installations/src/util/constants.ts","../installations/src/util/errors.ts","../installations/src/helpers/extract-app-config.ts","../installations/src/api/common.ts","../installations/src/util/sleep.ts","../installations/src/helpers/buffer-to-base64-url-safe.ts","../installations/src/helpers/generate-fid.ts","../installations/src/helpers/idb-manager.ts","../installations/src/helpers/get-installation-entry.ts","../installations/src/api/create-installation.ts","../installations/src/api/generate-auth-token.ts","../installations/src/helpers/refresh-auth-token.ts","../installations/src/functions/get-token.ts","../installations/src/api/delete-installation.ts","../installations/src/index.ts","../installations/src/functions/get-id.ts","../installations/src/functions/delete-installation.ts","../performance/src/services/api_service.ts","../performance/src/services/settings_service.ts","../performance/src/constants.ts","../performance/src/utils/errors.ts","../performance/src/services/iid_service.ts","../performance/src/utils/attributes_utils.ts","../performance/src/utils/console_logger.ts","../performance/src/services/remote_config_service.ts","../performance/src/services/initialization_service.ts","../performance/src/services/cc_service.ts","../performance/src/services/perf_logger.ts","../performance/src/utils/metric_utils.ts","../performance/src/resources/trace.ts","../performance/src/resources/network_request.ts","../performance/src/services/oob_resources_service.ts","../performance/src/controllers/perf.ts","../performance/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    if (!source.hasOwnProperty(prop)) {\n      continue;\n    }\n    (target as { [key: string]: unknown })[prop] = deepExtend(\n      (target as { [key: string]: unknown })[prop],\n      (source as { [key: string]: unknown })[prop]\n    );\n  }\n\n  return target;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if (e.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: StringLike | undefined;\n}\n\nexport interface FirebaseError extends Error, ErrorData {\n  // Unique code for error - format is service/error-code-string.\n  readonly code: string;\n\n  // Developer-friendly error message.\n  readonly message: string;\n\n  // Always 'FirebaseError'.\n  readonly name: typeof ERROR_NAME;\n\n  // Where available - stack backtrace in a string.\n  readonly stack?: string;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  readonly name = ERROR_NAME;\n\n  constructor(readonly code: string, message: string) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage);\n\n    // Keys with an underscore at the end of their name are not included in\n    // error.data for some reason.\n    // TODO: Replace with Object.entries when lib is updated to es2017.\n    for (const key of Object.keys(customData)) {\n      if (key.slice(-1) !== '_') {\n        if (key in error) {\n          console.warn(\n            `Overwriting FirebaseError base field \"${key}\" can cause unexpected behavior.`\n          );\n        }\n        error[key] = customData[key];\n      }\n    }\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? value.toString() : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: keyof T): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whehter the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { InstantiationMode, Name, NameServiceMapping } from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier: string = DEFAULT_ENTRY_NAME): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n      // If the service instance is available, resolve the promise with it immediately\n      try {\n        const instance = this.getOrInitializeService(normalizedIdentifier);\n        if (instance) {\n          deferred.resolve(instance);\n        }\n      } catch (e) {\n        // when the instance factory throws an exception during get(), it should not cause\n        // a fatal error. We just return the unresolved promise in this case.\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    const { identifier, optional } = {\n      identifier: DEFAULT_ENTRY_NAME,\n      optional: false,\n      ...options\n    };\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    try {\n      const instance = this.getOrInitializeService(normalizedIdentifier);\n\n      if (!instance) {\n        if (optional) {\n          return null;\n        }\n        throw Error(`Service ${this.name} is not available`);\n      }\n\n      return instance;\n    } catch (e) {\n      if (optional) {\n        return null;\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService(DEFAULT_ENTRY_NAME);\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier = this.normalizeInstanceIdentifier(\n        instanceIdentifier\n      );\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService(normalizedIdentifier)!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all(\n      services\n        .filter(service => 'INTERNAL' in service)\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete())\n    );\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  private getOrInitializeService(\n    identifier: string\n  ): NameServiceMapping[T] | null {\n    let instance = this.instances.get(identifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(\n        this.container,\n        normalizeIdentifierForFactory(identifier)\n      ) as NameServiceMapping[T];\n      this.instances.set(identifier, instance);\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(identifier: string): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager(component: Component<Name>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  switch (logType) {\n    /**\n     * By default, `console.debug` is not displayed in the developer console (in\n     * chrome). To avoid forcing users to have to opt-in to these logs twice\n     * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n     * logs to the `console.log` function.\n     */\n    case LogLevel.DEBUG:\n      console.log(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    case LogLevel.VERBOSE:\n      console.log(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    case LogLevel.INFO:\n      console.info(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    case LogLevel.WARN:\n      console.warn(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    case LogLevel.ERROR:\n      console.error(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    default:\n      throw new Error(\n        `Attempted to log a message with an invalid logType (value: ${logType})`\n      );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError('Invalid value assigned to `logLevel`');\n    }\n    this._logLevel = val;\n  }\n\n  /**\n   * The log handler for the Logger instance.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]: \"Firebase App named '{$appName}' already exists\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.'\n};\n\ntype ErrorParams = { [key in AppError]: { appName: string } };\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppConfig\n} from '@firebase/app-types';\nimport {\n  _FirebaseApp,\n  _FirebaseNamespace,\n  FirebaseService\n} from '@firebase/app-types/private';\nimport { deepCopy } from '@firebase/util';\nimport { ERROR_FACTORY, AppError } from '../errors';\nimport { DEFAULT_ENTRY_NAME } from '../constants';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType,\n  Name\n} from '@firebase/component';\n\ninterface ServicesCache {\n  [name: string]: {\n    [serviceName: string]: FirebaseService;\n  };\n}\n\n/**\n * Global context object for a collection of services using\n * a shared authentication state.\n */\nexport class FirebaseAppLiteImpl implements FirebaseApp {\n  private readonly options_: FirebaseOptions;\n  private readonly name_: string;\n  private isDeleted_ = false;\n  private automaticDataCollectionEnabled_: boolean;\n  private container: ComponentContainer;\n\n  // lite version has an empty INTERNAL namespace\n  readonly INTERNAL = {};\n\n  constructor(\n    options: FirebaseOptions,\n    config: FirebaseAppConfig,\n    private readonly firebase_: _FirebaseNamespace\n  ) {\n    this.name_ = config.name!;\n    this.automaticDataCollectionEnabled_ =\n      config.automaticDataCollectionEnabled || false;\n    this.options_ = deepCopy<FirebaseOptions>(options);\n    this.container = new ComponentContainer(config.name!);\n\n    // add itself to container\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n    // populate ComponentContainer with existing components\n    for (const component of this.firebase_.INTERNAL.components.values()) {\n      this.container.addComponent(component);\n    }\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed_();\n    return this.automaticDataCollectionEnabled_;\n  }\n\n  set automaticDataCollectionEnabled(val) {\n    this.checkDestroyed_();\n    this.automaticDataCollectionEnabled_ = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed_();\n    return this.name_;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed_();\n    return this.options_;\n  }\n\n  delete(): Promise<void> {\n    return new Promise(resolve => {\n      this.checkDestroyed_();\n      resolve();\n    })\n      .then(() => {\n        this.firebase_.INTERNAL.removeApp(this.name_);\n\n        return Promise.all(\n          this.container.getProviders().map(provider => provider.delete())\n        );\n      })\n      .then((): void => {\n        this.isDeleted_ = true;\n      });\n  }\n\n  /**\n   * Return a service instance associated with this app (creating it\n   * on demand), identified by the passed instanceIdentifier.\n   *\n   * NOTE: Currently storage is the only one that is leveraging this\n   * functionality. They invoke it by calling:\n   *\n   * ```javascript\n   * firebase.app().storage('STORAGE BUCKET ID')\n   * ```\n   *\n   * The service name is passed to this already\n   * @internal\n   */\n  _getService(\n    name: string,\n    instanceIdentifier: string = DEFAULT_ENTRY_NAME\n  ): FirebaseService {\n    this.checkDestroyed_();\n\n    // getImmediate will always succeed because _getService is only called for registered components.\n    return (this.container.getProvider(name as Name).getImmediate({\n      identifier: instanceIdentifier\n    }) as unknown) as FirebaseService;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed_(): void {\n    if (this.isDeleted_) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this.name_ });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseNamespace,\n  FirebaseAppConfig\n} from '@firebase/app-types';\nimport {\n  _FirebaseApp,\n  _FirebaseNamespace,\n  FirebaseService,\n  FirebaseServiceNamespace\n} from '@firebase/app-types/private';\nimport { deepExtend, contains } from '@firebase/util';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport { FirebaseAppLiteImpl } from './lite/firebaseAppLite';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { version } from '../../firebase/package.json';\nimport { logger } from './logger';\nimport { Component, ComponentType } from '@firebase/component';\n\n/**\n * Because auth can't share code with other components, we attach the utility functions\n * in an internal namespace to share code.\n * This function return a firebase namespace object without\n * any utility functions, so it can be shared between the regular firebaseNamespace and\n * the lite version.\n */\nexport function createFirebaseNamespaceCore(\n  firebaseAppImpl: typeof FirebaseAppImpl | typeof FirebaseAppLiteImpl\n): FirebaseNamespace {\n  const apps: { [name: string]: FirebaseApp } = {};\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const components = new Map<string, Component<any>>();\n\n  // A namespace is a plain JavaScript Object.\n  const namespace: FirebaseNamespace = {\n    // Hack to prevent Babel from modifying the object returned\n    // as the firebase namespace.\n    // @ts-ignore\n    __esModule: true,\n    initializeApp,\n    // @ts-ignore\n    app,\n    // @ts-ignore\n    apps: null,\n    SDK_VERSION: version,\n    INTERNAL: {\n      registerComponent,\n      removeApp,\n      components,\n      useAsService\n    }\n  };\n\n  // Inject a circular default export to allow Babel users who were previously\n  // using:\n  //\n  //   import firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase').default;\n  //\n  // instead of\n  //\n  //   import * as firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase');\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (namespace as any)['default'] = namespace;\n\n  // firebase.apps is a read-only getter.\n  Object.defineProperty(namespace, 'apps', {\n    get: getApps\n  });\n\n  /**\n   * Called by App.delete() - but before any services associated with the App\n   * are deleted.\n   */\n  function removeApp(name: string): void {\n    delete apps[name];\n  }\n\n  /**\n   * Get the App object for a given name (or DEFAULT).\n   */\n  function app(name?: string): FirebaseApp {\n    name = name || DEFAULT_ENTRY_NAME;\n    if (!contains(apps, name)) {\n      throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n    }\n    return apps[name];\n  }\n\n  // @ts-ignore\n  app['App'] = firebaseAppImpl;\n  /**\n   * Create a new App instance (name must be unique).\n   */\n  function initializeApp(\n    options: FirebaseOptions,\n    config?: FirebaseAppConfig\n  ): FirebaseApp;\n  function initializeApp(options: FirebaseOptions, name?: string): FirebaseApp;\n  function initializeApp(\n    options: FirebaseOptions,\n    rawConfig = {}\n  ): FirebaseApp {\n    if (typeof rawConfig !== 'object' || rawConfig === null) {\n      const name = rawConfig;\n      rawConfig = { name };\n    }\n\n    const config = rawConfig as FirebaseAppConfig;\n\n    if (config.name === undefined) {\n      config.name = DEFAULT_ENTRY_NAME;\n    }\n\n    const { name } = config;\n\n    if (typeof name !== 'string' || !name) {\n      throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n        appName: String(name)\n      });\n    }\n\n    if (contains(apps, name)) {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n\n    const app = new firebaseAppImpl(\n      options,\n      config,\n      namespace as _FirebaseNamespace\n    );\n\n    apps[name] = app;\n\n    return app;\n  }\n\n  /*\n   * Return an array of all the non-deleted FirebaseApps.\n   */\n  function getApps(): FirebaseApp[] {\n    // Make a copy so caller cannot mutate the apps list.\n    return Object.keys(apps).map(name => apps[name]);\n  }\n\n  function registerComponent(\n    component: Component\n  ): FirebaseServiceNamespace<FirebaseService> | null {\n    const componentName = component.name;\n    if (components.has(componentName)) {\n      logger.debug(\n        `There were multiple attempts to register component ${componentName}.`\n      );\n\n      return component.type === ComponentType.PUBLIC\n        ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (namespace as any)[componentName]\n        : null;\n    }\n\n    components.set(componentName, component);\n\n    // create service namespace for public components\n    if (component.type === ComponentType.PUBLIC) {\n      // The Service namespace is an accessor function ...\n      const serviceNamespace = (\n        appArg: FirebaseApp = app()\n      ): FirebaseService => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (typeof (appArg as any)[componentName] !== 'function') {\n          // Invalid argument.\n          // This happens in the following case: firebase.storage('gs:/')\n          throw ERROR_FACTORY.create(AppError.INVALID_APP_ARGUMENT, {\n            appName: componentName\n          });\n        }\n\n        // Forward service instance lookup to the FirebaseApp.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return (appArg as any)[componentName]();\n      };\n\n      // ... and a container for service-level properties.\n      if (component.serviceProps !== undefined) {\n        deepExtend(serviceNamespace, component.serviceProps);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (namespace as any)[componentName] = serviceNamespace;\n\n      // Patch the FirebaseAppImpl prototype\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (firebaseAppImpl.prototype as any)[componentName] =\n        // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\n        // option added to the no-explicit-any rule when ESlint releases it.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        function(...args: any) {\n          const serviceFxn = this._getService.bind(this, componentName);\n          return serviceFxn.apply(\n            this,\n            component.multipleInstances ? args : []\n          );\n        };\n    }\n\n    // add the component to existing app instances\n    for (const appName of Object.keys(apps)) {\n      (apps[appName] as _FirebaseApp)._addComponent(component);\n    }\n\n    return component.type === ComponentType.PUBLIC\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (namespace as any)[componentName]\n      : null;\n  }\n\n  // Map the requested service to a registered service name\n  // (used to map auth to serverAuth service when needed).\n  function useAsService(app: FirebaseApp, name: string): string | null {\n    if (name === 'serverAuth') {\n      return null;\n    }\n\n    const useService = name;\n\n    return useService;\n  }\n\n  return namespace;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createFirebaseNamespaceLite } from './src/lite/firebaseNamespaceLite';\n\nexport const firebase = createFirebaseNamespaceLite();\n\n// eslint-disable-next-line import/no-default-export\nexport default firebase;\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace } from '@firebase/app-types';\nimport {\n  _FirebaseApp,\n  _FirebaseNamespace,\n  FirebaseServiceNamespace,\n  FirebaseService\n} from '@firebase/app-types/private';\nimport { FirebaseAppLiteImpl } from './firebaseAppLite';\nimport { createFirebaseNamespaceCore } from '../firebaseNamespaceCore';\nimport { Component, ComponentType } from '@firebase/component';\n\nexport function createFirebaseNamespaceLite(): FirebaseNamespace {\n  const namespace = createFirebaseNamespaceCore(FirebaseAppLiteImpl);\n\n  namespace.SDK_VERSION = `${namespace.SDK_VERSION}_LITE`;\n\n  const registerComponent = (namespace as _FirebaseNamespace).INTERNAL\n    .registerComponent;\n  (namespace as _FirebaseNamespace).INTERNAL.registerComponent = registerComponentForLite;\n\n  /**\n   * This is a special implementation, so it only works with performance.\n   * only allow performance SDK to register.\n   */\n  function registerComponentForLite(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    component: Component<any>\n  ): FirebaseServiceNamespace<FirebaseService> | null {\n    // only allow performance to register with firebase lite\n    if (\n      component.type === ComponentType.PUBLIC &&\n      component.name !== 'performance' &&\n      component.name !== 'installations'\n    ) {\n      throw Error(`${name} cannot register with the standalone perf instance`);\n    }\n\n    return registerComponent(component);\n  }\n\n  return namespace;\n}\n","function toArray(arr) {\n  return Array.prototype.slice.call(arr);\n}\n\nfunction promisifyRequest(request) {\n  return new Promise(function(resolve, reject) {\n    request.onsuccess = function() {\n      resolve(request.result);\n    };\n\n    request.onerror = function() {\n      reject(request.error);\n    };\n  });\n}\n\nfunction promisifyRequestCall(obj, method, args) {\n  var request;\n  var p = new Promise(function(resolve, reject) {\n    request = obj[method].apply(obj, args);\n    promisifyRequest(request).then(resolve, reject);\n  });\n\n  p.request = request;\n  return p;\n}\n\nfunction promisifyCursorRequestCall(obj, method, args) {\n  var p = promisifyRequestCall(obj, method, args);\n  return p.then(function(value) {\n    if (!value) return;\n    return new Cursor(value, p.request);\n  });\n}\n\nfunction proxyProperties(ProxyClass, targetProp, properties) {\n  properties.forEach(function(prop) {\n    Object.defineProperty(ProxyClass.prototype, prop, {\n      get: function() {\n        return this[targetProp][prop];\n      },\n      set: function(val) {\n        this[targetProp][prop] = val;\n      }\n    });\n  });\n}\n\nfunction proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return promisifyRequestCall(this[targetProp], prop, arguments);\n    };\n  });\n}\n\nfunction proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return this[targetProp][prop].apply(this[targetProp], arguments);\n    };\n  });\n}\n\nfunction proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n    };\n  });\n}\n\nfunction Index(index) {\n  this._index = index;\n}\n\nproxyProperties(Index, '_index', [\n  'name',\n  'keyPath',\n  'multiEntry',\n  'unique'\n]);\n\nproxyRequestMethods(Index, '_index', IDBIndex, [\n  'get',\n  'getKey',\n  'getAll',\n  'getAllKeys',\n  'count'\n]);\n\nproxyCursorRequestMethods(Index, '_index', IDBIndex, [\n  'openCursor',\n  'openKeyCursor'\n]);\n\nfunction Cursor(cursor, request) {\n  this._cursor = cursor;\n  this._request = request;\n}\n\nproxyProperties(Cursor, '_cursor', [\n  'direction',\n  'key',\n  'primaryKey',\n  'value'\n]);\n\nproxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n  'update',\n  'delete'\n]);\n\n// proxy 'next' methods\n['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n  if (!(methodName in IDBCursor.prototype)) return;\n  Cursor.prototype[methodName] = function() {\n    var cursor = this;\n    var args = arguments;\n    return Promise.resolve().then(function() {\n      cursor._cursor[methodName].apply(cursor._cursor, args);\n      return promisifyRequest(cursor._request).then(function(value) {\n        if (!value) return;\n        return new Cursor(value, cursor._request);\n      });\n    });\n  };\n});\n\nfunction ObjectStore(store) {\n  this._store = store;\n}\n\nObjectStore.prototype.createIndex = function() {\n  return new Index(this._store.createIndex.apply(this._store, arguments));\n};\n\nObjectStore.prototype.index = function() {\n  return new Index(this._store.index.apply(this._store, arguments));\n};\n\nproxyProperties(ObjectStore, '_store', [\n  'name',\n  'keyPath',\n  'indexNames',\n  'autoIncrement'\n]);\n\nproxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n  'put',\n  'add',\n  'delete',\n  'clear',\n  'get',\n  'getAll',\n  'getKey',\n  'getAllKeys',\n  'count'\n]);\n\nproxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n  'openCursor',\n  'openKeyCursor'\n]);\n\nproxyMethods(ObjectStore, '_store', IDBObjectStore, [\n  'deleteIndex'\n]);\n\nfunction Transaction(idbTransaction) {\n  this._tx = idbTransaction;\n  this.complete = new Promise(function(resolve, reject) {\n    idbTransaction.oncomplete = function() {\n      resolve();\n    };\n    idbTransaction.onerror = function() {\n      reject(idbTransaction.error);\n    };\n    idbTransaction.onabort = function() {\n      reject(idbTransaction.error);\n    };\n  });\n}\n\nTransaction.prototype.objectStore = function() {\n  return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n};\n\nproxyProperties(Transaction, '_tx', [\n  'objectStoreNames',\n  'mode'\n]);\n\nproxyMethods(Transaction, '_tx', IDBTransaction, [\n  'abort'\n]);\n\nfunction UpgradeDB(db, oldVersion, transaction) {\n  this._db = db;\n  this.oldVersion = oldVersion;\n  this.transaction = new Transaction(transaction);\n}\n\nUpgradeDB.prototype.createObjectStore = function() {\n  return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n};\n\nproxyProperties(UpgradeDB, '_db', [\n  'name',\n  'version',\n  'objectStoreNames'\n]);\n\nproxyMethods(UpgradeDB, '_db', IDBDatabase, [\n  'deleteObjectStore',\n  'close'\n]);\n\nfunction DB(db) {\n  this._db = db;\n}\n\nDB.prototype.transaction = function() {\n  return new Transaction(this._db.transaction.apply(this._db, arguments));\n};\n\nproxyProperties(DB, '_db', [\n  'name',\n  'version',\n  'objectStoreNames'\n]);\n\nproxyMethods(DB, '_db', IDBDatabase, [\n  'close'\n]);\n\n// Add cursor iterators\n// TODO: remove this once browsers do the right thing with promises\n['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n  [ObjectStore, Index].forEach(function(Constructor) {\n    // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n    if (!(funcName in Constructor.prototype)) return;\n\n    Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n      var args = toArray(arguments);\n      var callback = args[args.length - 1];\n      var nativeObject = this._store || this._index;\n      var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n      request.onsuccess = function() {\n        callback(request.result);\n      };\n    };\n  });\n});\n\n// polyfill getAll\n[Index, ObjectStore].forEach(function(Constructor) {\n  if (Constructor.prototype.getAll) return;\n  Constructor.prototype.getAll = function(query, count) {\n    var instance = this;\n    var items = [];\n\n    return new Promise(function(resolve) {\n      instance.iterateCursor(query, function(cursor) {\n        if (!cursor) {\n          resolve(items);\n          return;\n        }\n        items.push(cursor.value);\n\n        if (count !== undefined && items.length == count) {\n          resolve(items);\n          return;\n        }\n        cursor.continue();\n      });\n    });\n  };\n});\n\nexport function openDb(name, version, upgradeCallback) {\n  var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n  var request = p.request;\n\n  if (request) {\n    request.onupgradeneeded = function(event) {\n      if (upgradeCallback) {\n        upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n      }\n    };\n  }\n\n  return p.then(function(db) {\n    return new DB(db);\n  });\n}\n\nexport function deleteDb(name) {\n  return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../../package.json';\n\nexport const PENDING_TIMEOUT_MS = 10000;\n\nexport const PACKAGE_VERSION = `w:${version}`;\nexport const INTERNAL_AUTH_VERSION = 'FIS_v2';\n\nexport const INSTALLATIONS_API_URL =\n  'https://firebaseinstallations.googleapis.com/v1';\n\nexport const TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\n\nexport const SERVICE = 'installations';\nexport const SERVICE_NAME = 'Installations';\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from './constants';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  NOT_REGISTERED = 'not-registered',\n  INSTALLATION_NOT_FOUND = 'installation-not-found',\n  REQUEST_FAILED = 'request-failed',\n  APP_OFFLINE = 'app-offline',\n  DELETE_PENDING_REGISTRATION = 'delete-pending-registration'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.NOT_REGISTERED]: 'Firebase Installation is not registered.',\n  [ErrorCode.INSTALLATION_NOT_FOUND]: 'Firebase Installation not found.',\n  [ErrorCode.REQUEST_FAILED]:\n    '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n  [ErrorCode.APP_OFFLINE]: 'Could not process request. Application offline.',\n  [ErrorCode.DELETE_PENDING_REGISTRATION]:\n    \"Can't delete installation while there is a pending registration request.\"\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.REQUEST_FAILED]: {\n    requestName: string;\n  } & ServerErrorData;\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n\nexport interface ServerErrorData {\n  serverCode: number;\n  serverMessage: string;\n  serverStatus: string;\n}\n\nexport type ServerError = FirebaseError & ServerErrorData;\n\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nexport function isServerError(error: unknown): error is ServerError {\n  return (\n    error instanceof FirebaseError &&\n    error.code.includes(ErrorCode.REQUEST_FAILED)\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app-types';\nimport { AppConfig } from '../interfaces/app-config';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { FirebaseError } from '@firebase/util';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: Array<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId'\n  ];\n\n  for (const keyName of configKeys) {\n    if (!app.options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: app.options.projectId!,\n    apiKey: app.options.apiKey!,\n    appId: app.options.appId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport {\n  INSTALLATIONS_API_URL,\n  INTERNAL_AUTH_VERSION\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function getInstallationsEndpoint({ projectId }: AppConfig): string {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\n\nexport function extractAuthTokenInfoFromResponse(\n  response: GenerateAuthTokenResponse\n): CompletedAuthToken {\n  return {\n    token: response.token,\n    requestStatus: RequestStatus.COMPLETED,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nexport async function getErrorFromResponse(\n  requestName: string,\n  response: Response\n): Promise<FirebaseError> {\n  const responseJson: ErrorResponse = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(ErrorCode.REQUEST_FAILED, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\n\nexport function getHeaders({ apiKey }: AppConfig): Headers {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nexport function getHeadersWithAuth(\n  appConfig: AppConfig,\n  { refreshToken }: RegisteredInstallationEntry\n): Headers {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n\nexport interface ErrorResponse {\n  error: {\n    code: number;\n    message: string;\n    status: string;\n  };\n}\n\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nexport async function retryIfServerError(\n  fn: () => Promise<Response>\n): Promise<Response> {\n  const result = await fn();\n\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n  }\n\n  return result;\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn: string): number {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken: string): string {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function bufferToBase64UrlSafe(array: Uint8Array): string {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bufferToBase64UrlSafe } from './buffer-to-base64-url-safe';\n\nexport const VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nexport const INVALID_FID = '';\n\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nexport function generateFid(): string {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto =\n      self.crypto || ((self as unknown) as { msCrypto: Crypto }).msCrypto;\n    crypto.getRandomValues(fidByteArray);\n\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n\n    const fid = encode(fidByteArray);\n\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray: Uint8Array): string {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DB, openDb } from 'idb';\nimport { AppConfig } from '../interfaces/app-config';\nimport { InstallationEntry } from '../interfaces/installation-entry';\n\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\n\nlet dbPromise: Promise<DB> | null = null;\nfunction getDbPromise(): Promise<DB> {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDB => {\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDB.oldVersion) {\n        case 0:\n          upgradeDB.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function get(\n  appConfig: AppConfig\n): Promise<InstallationEntry | undefined> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  return db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key);\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function set<ValueType extends InstallationEntry>(\n  appConfig: AppConfig,\n  value: ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(value, key);\n  await tx.complete;\n  return value;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function remove(appConfig: AppConfig): Promise<void> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.complete;\n}\n\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nexport async function update<ValueType extends InstallationEntry | undefined>(\n  appConfig: AppConfig,\n  updateFn: (previousValue: InstallationEntry | undefined) => ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const store = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue: InstallationEntry | undefined = await store.get(key);\n  const newValue = updateFn(oldValue);\n\n  if (newValue === undefined) {\n    await store.delete(key);\n  } else {\n    await store.put(newValue, key);\n  }\n\n  await tx.complete;\n  return newValue;\n}\n\nexport async function clear(): Promise<void> {\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).clear();\n  await tx.complete;\n}\n\nfunction getKey(appConfig: AppConfig): string {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInstallation } from '../api/create-installation';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RequestStatus,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { generateFid, INVALID_FID } from './generate-fid';\nimport { remove, set, update } from './idb-manager';\n\nexport interface InstallationEntryWithRegistrationPromise {\n  installationEntry: InstallationEntry;\n  /** Exist iff the installationEntry is not registered. */\n  registrationPromise?: Promise<RegisteredInstallationEntry>;\n}\n\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nexport async function getInstallationEntry(\n  appConfig: AppConfig\n): Promise<InstallationEntryWithRegistrationPromise> {\n  let registrationPromise: Promise<RegisteredInstallationEntry> | undefined;\n\n  const installationEntry = await update(appConfig, oldEntry => {\n    const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n    const entryWithPromise = triggerRegistrationIfNecessary(\n      appConfig,\n      installationEntry\n    );\n    registrationPromise = entryWithPromise.registrationPromise;\n    return entryWithPromise.installationEntry;\n  });\n\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return { installationEntry: await registrationPromise! };\n  }\n\n  return {\n    installationEntry,\n    registrationPromise\n  };\n}\n\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(\n  oldEntry: InstallationEntry | undefined\n): InstallationEntry {\n  const entry: InstallationEntry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: RequestStatus.NOT_STARTED\n  };\n\n  return clearTimedOutRequest(entry);\n}\n\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n *\n * If registrationPromise does not exist, the installationEntry is guaranteed\n * to be registered.\n */\nfunction triggerRegistrationIfNecessary(\n  appConfig: AppConfig,\n  installationEntry: InstallationEntry\n): InstallationEntryWithRegistrationPromise {\n  if (installationEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(\n        ERROR_FACTORY.create(ErrorCode.APP_OFFLINE)\n      );\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry: InProgressInstallationEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: RequestStatus.IN_PROGRESS,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(\n      appConfig,\n      inProgressEntry\n    );\n    return { installationEntry: inProgressEntry, registrationPromise };\n  } else if (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS\n  ) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(appConfig)\n    };\n  } else {\n    return { installationEntry };\n  }\n}\n\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(\n  appConfig: AppConfig,\n  installationEntry: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  try {\n    const registeredInstallationEntry = await createInstallation(\n      appConfig,\n      installationEntry\n    );\n    return set(appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: RequestStatus.NOT_STARTED\n      });\n    }\n    throw e;\n  }\n}\n\n/** Call if FID registration is pending in another request. */\nasync function waitUntilFidRegistration(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry: InstallationEntry = await updateInstallationRequest(appConfig);\n  while (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n    // createInstallation request still in progress.\n    await sleep(100);\n\n    entry = await updateInstallationRequest(appConfig);\n  }\n\n  if (entry.registrationStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    const {\n      installationEntry,\n      registrationPromise\n    } = await getInstallationEntry(appConfig);\n\n    if (registrationPromise) {\n      return registrationPromise;\n    } else {\n      // if there is no registrationPromise, entry is registered.\n      return installationEntry as RegisteredInstallationEntry;\n    }\n  }\n\n  return entry;\n}\n\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(\n  appConfig: AppConfig\n): Promise<InstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(ErrorCode.INSTALLATION_NOT_FOUND);\n    }\n    return clearTimedOutRequest(oldEntry);\n  });\n}\n\nfunction clearTimedOutRequest(entry: InstallationEntry): InstallationEntry {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: RequestStatus.NOT_STARTED\n    };\n  }\n\n  return entry;\n}\n\nfunction hasInstallationRequestTimedOut(\n  installationEntry: InstallationEntry\n): boolean {\n  return (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS &&\n    installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CreateInstallationResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  InProgressInstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { INTERNAL_AUTH_VERSION, PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeaders,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function createInstallation(\n  appConfig: AppConfig,\n  { fid }: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  const endpoint = getInstallationsEndpoint(appConfig);\n\n  const headers = getHeaders(appConfig);\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: CreateInstallationResponse = await response.json();\n    const registeredInstallationEntry: RegisteredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: RequestStatus.COMPLETED,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw await getErrorFromResponse('Create Installation', response);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function generateAuthToken(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION\n    }\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: GenerateAuthTokenResponse = await response.json();\n    const completedAuthToken: CompletedAuthToken = extractAuthTokenInfoFromResponse(\n      responseValue\n    );\n    return completedAuthToken;\n  } else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n  }\n}\n\nfunction getGenerateAuthTokenEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { generateAuthToken } from '../api/generate-auth-token';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  AuthToken,\n  CompletedAuthToken,\n  InProgressAuthToken,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { remove, set, update } from './idb-manager';\n\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nexport async function refreshAuthToken(\n  appConfig: AppConfig,\n  forceRefresh = false\n): Promise<CompletedAuthToken> {\n  let tokenPromise: Promise<CompletedAuthToken> | undefined;\n  const entry = await update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n      // There is a valid token in the DB.\n      return oldEntry;\n    } else if (oldAuthToken.requestStatus === RequestStatus.IN_PROGRESS) {\n      // There already is a token request in progress.\n      tokenPromise = waitUntilAuthTokenRequest(appConfig, forceRefresh);\n      return oldEntry;\n    } else {\n      // No token or token expired.\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      }\n\n      const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n      tokenPromise = fetchAuthTokenFromServer(appConfig, inProgressEntry);\n      return inProgressEntry;\n    }\n  });\n\n  const authToken = tokenPromise\n    ? await tokenPromise\n    : (entry.authToken as CompletedAuthToken);\n  return authToken;\n}\n\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n */\nasync function waitUntilAuthTokenRequest(\n  appConfig: AppConfig,\n  forceRefresh: boolean\n): Promise<CompletedAuthToken> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry = await updateAuthTokenRequest(appConfig);\n  while (entry.authToken.requestStatus === RequestStatus.IN_PROGRESS) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n\n    entry = await updateAuthTokenRequest(appConfig);\n  }\n\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    return refreshAuthToken(appConfig, forceRefresh);\n  } else {\n    return authToken;\n  }\n}\n\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return {\n        ...oldEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n    }\n\n    return oldEntry;\n  });\n}\n\nasync function fetchAuthTokenFromServer(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  try {\n    const authToken = await generateAuthToken(appConfig, installationEntry);\n    const updatedInstallationEntry: RegisteredInstallationEntry = {\n      ...installationEntry,\n      authToken\n    };\n    await set(appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (isServerError(e) && (e.serverCode === 401 || e.serverCode === 404)) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(appConfig);\n    } else {\n      const updatedInstallationEntry: RegisteredInstallationEntry = {\n        ...installationEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n      await set(appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\n\nfunction isEntryRegistered(\n  installationEntry: InstallationEntry | undefined\n): installationEntry is RegisteredInstallationEntry {\n  return (\n    installationEntry !== undefined &&\n    installationEntry.registrationStatus === RequestStatus.COMPLETED\n  );\n}\n\nfunction isAuthTokenValid(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.COMPLETED &&\n    !isAuthTokenExpired(authToken)\n  );\n}\n\nfunction isAuthTokenExpired(authToken: CompletedAuthToken): boolean {\n  const now = Date.now();\n  return (\n    now < authToken.creationTime ||\n    authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER\n  );\n}\n\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(\n  oldEntry: RegisteredInstallationEntry\n): RegisteredInstallationEntry {\n  const inProgressAuthToken: InProgressAuthToken = {\n    requestStatus: RequestStatus.IN_PROGRESS,\n    requestTime: Date.now()\n  };\n  return {\n    ...oldEntry,\n    authToken: inProgressAuthToken\n  };\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.IN_PROGRESS &&\n    authToken.requestTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { extractAppConfig } from '../helpers/extract-app-config';\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { AppConfig } from '../interfaces/app-config';\n\nexport async function getToken(\n  app: FirebaseApp,\n  forceRefresh = false\n): Promise<string> {\n  const appConfig = extractAppConfig(app);\n\n  await completeInstallationRegistration(appConfig);\n\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  const authToken = await refreshAuthToken(appConfig, forceRefresh);\n  return authToken.token;\n}\n\nasync function completeInstallationRegistration(\n  appConfig: AppConfig\n): Promise<void> {\n  const { registrationPromise } = await getInstallationEntry(appConfig);\n\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { RegisteredInstallationEntry } from '../interfaces/installation-entry';\nimport {\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function deleteInstallation(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<void> {\n  const endpoint = getDeleteEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const request: RequestInit = {\n    method: 'DELETE',\n    headers\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (!response.ok) {\n    throw await getErrorFromResponse('Delete Installation', response);\n  }\n}\n\nfunction getDeleteEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}`;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\nimport { FirebaseInstallations } from '@firebase/installations-types';\n\nimport { deleteInstallation, getId, getToken } from './functions';\nimport { extractAppConfig } from './helpers/extract-app-config';\nimport { Component, ComponentType } from '@firebase/component';\n\nexport function registerInstallations(instance: _FirebaseNamespace): void {\n  const installationsName = 'installations';\n\n  instance.INTERNAL.registerComponent(\n    new Component(\n      installationsName,\n      container => {\n        const app = container.getProvider('app').getImmediate();\n        // Throws if app isn't configured properly.\n        extractAppConfig(app);\n\n        return {\n          app,\n          getId: () => getId(app),\n          getToken: (forceRefresh?: boolean) => getToken(app, forceRefresh),\n          delete: () => deleteInstallation(app)\n        };\n      },\n      ComponentType.PUBLIC\n    )\n  );\n}\n\nregisterInstallations(firebase as _FirebaseNamespace);\n\n/**\n * Define extension behavior of `registerInstallations`\n */\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    installations(app?: FirebaseApp): FirebaseInstallations;\n  }\n  interface FirebaseApp {\n    installations(): FirebaseInstallations;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { extractAppConfig } from '../helpers/extract-app-config';\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\n\nexport async function getId(app: FirebaseApp): Promise<string> {\n  const appConfig = extractAppConfig(app);\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    appConfig\n  );\n\n  if (registrationPromise) {\n    registrationPromise.catch(console.error);\n  } else {\n    // If the installation is already registered, update the authentication\n    // token if needed.\n    refreshAuthToken(appConfig).catch(console.error);\n  }\n\n  return installationEntry.fid;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { deleteInstallation as deleteInstallationRequest } from '../api/delete-installation';\nimport { extractAppConfig } from '../helpers/extract-app-config';\nimport { remove, update } from '../helpers/idb-manager';\nimport { RequestStatus } from '../interfaces/installation-entry';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport async function deleteInstallation(app: FirebaseApp): Promise<void> {\n  const appConfig = extractAppConfig(app);\n\n  const entry = await update(appConfig, oldEntry => {\n    if (oldEntry && oldEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n      // Delete the unregistered entry without sending a deleteInstallation request.\n      return undefined;\n    }\n    return oldEntry;\n  });\n\n  if (entry) {\n    if (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n      // Can't delete while trying to register.\n      throw ERROR_FACTORY.create(ErrorCode.DELETE_PENDING_REGISTRATION);\n    } else if (entry.registrationStatus === RequestStatus.COMPLETED) {\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      } else {\n        await deleteInstallationRequest(appConfig, entry);\n        await remove(appConfig);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\n\ndeclare global {\n  interface Window {\n    PerformanceObserver: typeof PerformanceObserver;\n    perfMetrics?: { onFirstInputDelay: Function };\n  }\n}\n\nlet apiInstance: Api | undefined;\nlet windowInstance: Window | undefined;\n\nexport type EntryType =\n  | 'mark'\n  | 'measure'\n  | 'paint'\n  | 'resource'\n  | 'frame'\n  | 'navigation';\n\n/**\n * This class holds a reference to various browser related objects injected by set methods.\n */\nexport class Api {\n  private performance: Performance;\n  /** PreformanceObserver constructor function. */\n  private PerformanceObserver: typeof PerformanceObserver;\n  private windowLocation: Location;\n  onFirstInputDelay?: Function;\n  localStorage!: Storage;\n  document: Document;\n  navigator: Navigator;\n\n  constructor(window?: Window) {\n    if (!window) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_WINDOW);\n    }\n    this.performance = window.performance;\n    this.PerformanceObserver = window.PerformanceObserver;\n    this.windowLocation = window.location;\n    this.navigator = window.navigator;\n    this.document = window.document;\n    if (this.navigator && this.navigator.cookieEnabled) {\n      // If user blocks cookies on the browser, accessing localStorage will throw an exception.\n      this.localStorage = window.localStorage;\n    }\n    if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n      this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\n    }\n  }\n\n  getUrl(): string {\n    // Do not capture the string query part of url.\n    return this.windowLocation.href.split('?')[0];\n  }\n\n  mark(name: string): void {\n    if (!this.performance || !this.performance.mark) {\n      return;\n    }\n    this.performance.mark(name);\n  }\n\n  measure(measureName: string, mark1: string, mark2: string): void {\n    if (!this.performance || !this.performance.measure) {\n      return;\n    }\n    this.performance.measure(measureName, mark1, mark2);\n  }\n\n  getEntriesByType(type: EntryType): PerformanceEntry[] {\n    if (!this.performance || !this.performance.getEntriesByType) {\n      return [];\n    }\n    return this.performance.getEntriesByType(type);\n  }\n\n  getEntriesByName(name: string): PerformanceEntry[] {\n    if (!this.performance || !this.performance.getEntriesByName) {\n      return [];\n    }\n    return this.performance.getEntriesByName(name);\n  }\n\n  getTimeOrigin(): number {\n    // Polyfill the time origin with performance.timing.navigationStart.\n    return (\n      this.performance &&\n      (this.performance.timeOrigin || this.performance.timing.navigationStart)\n    );\n  }\n\n  requiredApisAvailable(): boolean {\n    if (fetch && Promise && this.navigator && this.navigator.cookieEnabled) {\n      return true;\n    }\n    return false;\n  }\n\n  setupObserver(\n    entryType: EntryType,\n    callback: (entry: PerformanceEntry) => void\n  ): void {\n    if (!this.PerformanceObserver) {\n      return;\n    }\n    const observer = new this.PerformanceObserver(list => {\n      for (const entry of list.getEntries()) {\n        // `entry` is a PerformanceEntry instance.\n        callback(entry);\n      }\n    });\n\n    // Start observing the entry types you care about.\n    observer.observe({ entryTypes: [entryType] });\n  }\n\n  static getInstance(): Api {\n    if (apiInstance === undefined) {\n      apiInstance = new Api(windowInstance);\n    }\n    return apiInstance;\n  }\n}\n\nexport function setupApi(window: Window): void {\n  windowInstance = window;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport { FirebaseInstallations } from '@firebase/installations-types';\n\nlet settingsServiceInstance: SettingsService | undefined;\n\nexport class SettingsService {\n  // The variable which controls logging of automatic traces and HTTP/S network monitoring.\n  instrumentationEnabled = true;\n\n  // The variable which controls logging of custom traces.\n  dataCollectionEnabled = true;\n\n  // Configuration flags set through remote config.\n  loggingEnabled = false;\n  // Sampling rate between 0 and 1.\n  tracesSamplingRate = 1;\n  networkRequestsSamplingRate = 1;\n  // Address of logging service.\n  logEndPointUrl =\n    'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\n  logSource = 462;\n\n  // Flags which control per session logging of traces and network requests.\n  logTraceAfterSampling = false;\n  logNetworkAfterSampling = false;\n\n  // TTL of config retrieved from remote config in hours.\n  configTimeToLive = 12;\n\n  firebaseAppInstance!: FirebaseApp;\n\n  installationsService!: FirebaseInstallations;\n\n  getAppId(): string {\n    const appId =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.appId;\n    if (!appId) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_APP_ID);\n    }\n    return appId;\n  }\n\n  getProjectId(): string {\n    const projectId =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.projectId;\n    if (!projectId) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_PROJECT_ID);\n    }\n    return projectId;\n  }\n\n  getApiKey(): string {\n    const apiKey =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.apiKey;\n    if (!apiKey) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_API_KEY);\n    }\n    return apiKey;\n  }\n\n  static getInstance(): SettingsService {\n    if (settingsServiceInstance === undefined) {\n      settingsServiceInstance = new SettingsService();\n    }\n    return settingsServiceInstance;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../package.json';\n\nexport const SDK_VERSION = version;\n/** The prefix for start User Timing marks used for creating Traces. */\nexport const TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\n/** The prefix for stop User Timing marks used for creating Traces. */\nexport const TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\n/** The prefix for User Timing measure used for creating Traces. */\nexport const TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\n/** The prefix for out of the box page load Trace name. */\nexport const OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\n\nexport const FIRST_PAINT_COUNTER_NAME = '_fp';\n\nexport const FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\n\nexport const FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\n\nexport const CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\n\nexport const CONFIG_EXPIRY_LOCAL_STORAGE_KEY =\n  '@firebase/performance/configexpire';\n\nexport const SERVICE = 'performance';\nexport const SERVICE_NAME = 'Performance';\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from '../constants';\n\nexport const enum ErrorCode {\n  TRACE_STARTED_BEFORE = 'trace started',\n  TRACE_STOPPED_BEFORE = 'trace stopped',\n  NO_WINDOW = 'no window',\n  NO_APP_ID = 'no app id',\n  NO_PROJECT_ID = 'no project id',\n  NO_API_KEY = 'no api key',\n  INVALID_CC_LOG = 'invalid cc log',\n  FB_NOT_DEFAULT = 'FB not default',\n  RC_NOT_OK = 'RC response not ok',\n  INVALID_ATTRIBUTE_NAME = 'invalid attribute name',\n  INVALID_ATTRIBUTE_VALUE = 'invalid attribute value',\n  INVALID_CUSTOM_METRIC_NAME = 'invalide custom metric name'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.TRACE_STARTED_BEFORE]: 'Trace {$traceName} was started before.',\n  [ErrorCode.TRACE_STOPPED_BEFORE]: 'Trace {$traceName} is not running.',\n  [ErrorCode.NO_WINDOW]: 'Window is not available.',\n  [ErrorCode.NO_APP_ID]: 'App id is not available.',\n  [ErrorCode.NO_PROJECT_ID]: 'Project id is not available.',\n  [ErrorCode.NO_API_KEY]: 'Api key is not available.',\n  [ErrorCode.INVALID_CC_LOG]: 'Attempted to queue invalid cc event',\n  [ErrorCode.FB_NOT_DEFAULT]:\n    'Performance can only start when Firebase app instance is the default one.',\n  [ErrorCode.RC_NOT_OK]: 'RC response is not ok',\n  [ErrorCode.INVALID_ATTRIBUTE_NAME]:\n    'Attribute name {$attributeName} is invalid.',\n  [ErrorCode.INVALID_ATTRIBUTE_VALUE]:\n    'Attribute value {$attributeValue} is invalid.',\n  [ErrorCode.INVALID_CUSTOM_METRIC_NAME]:\n    'Custom metric name {$customMetricName} is invalid'\n};\n\ninterface ErrorParams {\n  [ErrorCode.TRACE_STARTED_BEFORE]: { traceName: string };\n  [ErrorCode.TRACE_STOPPED_BEFORE]: { traceName: string };\n  [ErrorCode.INVALID_ATTRIBUTE_NAME]: { attributeName: string };\n  [ErrorCode.INVALID_ATTRIBUTE_VALUE]: { attributeValue: string };\n  [ErrorCode.INVALID_CUSTOM_METRIC_NAME]: { customMetricName: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SettingsService } from './settings_service';\n\nlet iid: string | undefined;\nlet authToken: string | undefined;\n\nexport function getIidPromise(): Promise<string> {\n  const iidPromise = SettingsService.getInstance().installationsService.getId();\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  iidPromise.then((iidVal: string) => {\n    iid = iidVal;\n  });\n  return iidPromise;\n}\n\n// This method should be used after the iid is retrieved by getIidPromise method.\nexport function getIid(): string | undefined {\n  return iid;\n}\n\nexport function getAuthTokenPromise(): Promise<string> {\n  const authTokenPromise = SettingsService.getInstance().installationsService.getToken();\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  authTokenPromise.then((authTokenVal: string) => {\n    authToken = authTokenVal;\n  });\n  return authTokenPromise;\n}\n\nexport function getAuthenticationToken(): string | undefined {\n  return authToken;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Api } from '../services/api_service';\n\n// The values and orders of the following enums should not be changed.\nconst enum ServiceWorkerStatus {\n  UNKNOWN = 0,\n  UNSUPPORTED = 1,\n  CONTROLLED = 2,\n  UNCONTROLLED = 3\n}\n\nexport enum VisibilityState {\n  UNKNOWN = 0,\n  VISIBLE = 1,\n  HIDDEN = 2\n}\n\nconst enum EffectiveConnectionType {\n  UNKNOWN = 0,\n  CONNECTION_SLOW_2G = 1,\n  CONNECTION_2G = 2,\n  CONNECTION_3G = 3,\n  CONNECTION_4G = 4\n}\n\nconst RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\nconst ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\nconst MAX_ATTRIBUTE_NAME_LENGTH = 40;\nconst MAX_ATTRIBUTE_VALUE_LENGTH = 100;\n\nexport function getServiceWorkerStatus(): ServiceWorkerStatus {\n  const navigator = Api.getInstance().navigator;\n  if ('serviceWorker' in navigator) {\n    if (navigator.serviceWorker.controller) {\n      return ServiceWorkerStatus.CONTROLLED;\n    } else {\n      return ServiceWorkerStatus.UNCONTROLLED;\n    }\n  } else {\n    return ServiceWorkerStatus.UNSUPPORTED;\n  }\n}\n\nexport function getVisibilityState(): VisibilityState {\n  const document = Api.getInstance().document;\n  const visibilityState = document.visibilityState;\n  switch (visibilityState) {\n    case 'visible':\n      return VisibilityState.VISIBLE;\n    case 'hidden':\n      return VisibilityState.HIDDEN;\n    default:\n      return VisibilityState.UNKNOWN;\n  }\n}\n\nexport function getEffectiveConnectionType(): EffectiveConnectionType {\n  const navigator = Api.getInstance().navigator;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const navigatorConnection = (navigator as any).connection;\n  const effectiveType =\n    navigatorConnection && navigatorConnection.effectiveType;\n  switch (effectiveType) {\n    case 'slow-2g':\n      return EffectiveConnectionType.CONNECTION_SLOW_2G;\n    case '2g':\n      return EffectiveConnectionType.CONNECTION_2G;\n    case '3g':\n      return EffectiveConnectionType.CONNECTION_3G;\n    case '4g':\n      return EffectiveConnectionType.CONNECTION_4G;\n    default:\n      return EffectiveConnectionType.UNKNOWN;\n  }\n}\n\nexport function isValidCustomAttributeName(name: string): boolean {\n  if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\n    return false;\n  }\n  const matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(prefix =>\n    name.startsWith(prefix)\n  );\n  return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\n}\n\nexport function isValidCustomAttributeValue(value: string): boolean {\n  return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { SERVICE_NAME } from '../constants';\n\nexport const consoleLogger = new Logger(SERVICE_NAME);\nconsoleLogger.logLevel = LogLevel.INFO;\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SettingsService } from './settings_service';\nimport {\n  SDK_VERSION,\n  CONFIG_LOCAL_STORAGE_KEY,\n  CONFIG_EXPIRY_LOCAL_STORAGE_KEY\n} from '../constants';\nimport { Api } from './api_service';\nimport { getAuthTokenPromise } from './iid_service';\nimport { consoleLogger } from '../utils/console_logger';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\n\nconst REMOTE_CONFIG_SDK_VERSION = '0.0.1';\n\ninterface SecondaryConfig {\n  loggingEnabled?: boolean;\n  logEndPointUrl?: string;\n  logSource?: number;\n  tracesSamplingRate?: number;\n  networkRequestsSamplingRate?: number;\n}\n\n// These values will be used if the remote config object is successfully\n// retrieved, but the template does not have these fields.\nconst SECONDARY_CONFIGS: SecondaryConfig = {\n  loggingEnabled: true\n};\n\n/* eslint-disable camelcase */\ninterface RemoteConfigTemplate {\n  fpr_enabled?: string;\n  fpr_log_source?: string;\n  fpr_log_endpoint_url?: string;\n  fpr_vc_network_request_sampling_rate?: string;\n  fpr_vc_trace_sampling_rate?: string;\n  fpr_vc_session_sampling_rate?: string;\n}\n/* eslint-enable camelcase */\n\ninterface RemoteConfigResponse {\n  entries?: RemoteConfigTemplate;\n  state?: string;\n}\n\nconst FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\n\nexport function getConfig(iid: string): Promise<void> {\n  const config = getStoredConfig();\n  if (config) {\n    processConfig(config);\n    return Promise.resolve();\n  }\n\n  return getRemoteConfig(iid)\n    .then(config => processConfig(config))\n    .then(\n      config => storeConfig(config),\n      /** Do nothing for error, use defaults set in settings service. */ () => {}\n    );\n}\n\nfunction getStoredConfig(): RemoteConfigResponse | undefined {\n  const localStorage = Api.getInstance().localStorage;\n  const expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\n  if (!expiryString || !configValid(expiryString)) {\n    return;\n  }\n\n  const configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\n  if (!configStringified) {\n    return;\n  }\n  try {\n    const configResponse: RemoteConfigResponse = JSON.parse(configStringified);\n    return configResponse;\n  } catch {\n    return;\n  }\n}\n\nfunction storeConfig(config: RemoteConfigResponse | undefined): void {\n  if (!config) {\n    return;\n  }\n  const localStorage = Api.getInstance().localStorage;\n  localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\n  localStorage.setItem(\n    CONFIG_EXPIRY_LOCAL_STORAGE_KEY,\n    String(\n      Date.now() +\n        SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000\n    )\n  );\n}\n\nconst COULD_NOT_GET_CONFIG_MSG =\n  'Could not fetch config, will use default configs';\n\nfunction getRemoteConfig(\n  iid: string\n): Promise<RemoteConfigResponse | undefined> {\n  // Perf needs auth token only to retrieve remote config.\n  return getAuthTokenPromise()\n    .then(authToken => {\n      const projectId = SettingsService.getInstance().getProjectId();\n      const configEndPoint = `https://firebaseremoteconfig.googleapis.com/v1/projects/${projectId}/namespaces/fireperf:fetch?key=${SettingsService.getInstance().getApiKey()}`;\n      const request = new Request(configEndPoint, {\n        method: 'POST',\n        headers: {\n          Authorization: `${FIS_AUTH_PREFIX} ${authToken}`\n        },\n        /* eslint-disable camelcase */\n        body: JSON.stringify({\n          app_instance_id: iid,\n          app_instance_id_token: authToken,\n          app_id: SettingsService.getInstance().getAppId(),\n          app_version: SDK_VERSION,\n          sdk_version: REMOTE_CONFIG_SDK_VERSION\n        })\n        /* eslint-enable camelcase */\n      });\n      return fetch(request).then(response => {\n        if (response.ok) {\n          return response.json() as RemoteConfigResponse;\n        }\n        // In case response is not ok. This will be caught by catch.\n        throw ERROR_FACTORY.create(ErrorCode.RC_NOT_OK);\n      });\n    })\n    .catch(() => {\n      consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\n      return undefined;\n    });\n}\n\n/**\n * Processes config coming either from calling RC or from local storage.\n * This method only runs if call is successful or config in storage\n * is valie.\n */\nfunction processConfig(\n  config: RemoteConfigResponse | undefined\n): RemoteConfigResponse | undefined {\n  if (!config) {\n    return config;\n  }\n  const settingsServiceInstance = SettingsService.getInstance();\n  const entries = config.entries || {};\n  if (entries.fpr_enabled !== undefined) {\n    // TODO: Change the assignment of loggingEnabled once the received type is known.\n    settingsServiceInstance.loggingEnabled =\n      String(entries.fpr_enabled) === 'true';\n  } else if (SECONDARY_CONFIGS.loggingEnabled !== undefined) {\n    // Config retrieved successfully, but there is no fpr_enabled in template.\n    // Use secondary configs value.\n    settingsServiceInstance.loggingEnabled = SECONDARY_CONFIGS.loggingEnabled;\n  }\n  if (entries.fpr_log_source) {\n    settingsServiceInstance.logSource = Number(entries.fpr_log_source);\n  } else if (SECONDARY_CONFIGS.logSource) {\n    settingsServiceInstance.logSource = SECONDARY_CONFIGS.logSource;\n  }\n  if (entries.fpr_log_endpoint_url) {\n    settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\n  } else if (SECONDARY_CONFIGS.logEndPointUrl) {\n    settingsServiceInstance.logEndPointUrl = SECONDARY_CONFIGS.logEndPointUrl;\n  }\n  if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate = Number(\n      entries.fpr_vc_network_request_sampling_rate\n    );\n  } else if (SECONDARY_CONFIGS.networkRequestsSamplingRate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate =\n      SECONDARY_CONFIGS.networkRequestsSamplingRate;\n  }\n  if (entries.fpr_vc_trace_sampling_rate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate = Number(\n      entries.fpr_vc_trace_sampling_rate\n    );\n  } else if (SECONDARY_CONFIGS.tracesSamplingRate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate =\n      SECONDARY_CONFIGS.tracesSamplingRate;\n  }\n  // Set the per session trace and network logging flags.\n  settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(\n    settingsServiceInstance.tracesSamplingRate\n  );\n  settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(\n    settingsServiceInstance.networkRequestsSamplingRate\n  );\n  return config;\n}\n\nfunction configValid(expiry: string): boolean {\n  return Number(expiry) > Date.now();\n}\n\nfunction shouldLogAfterSampling(samplingRate: number): boolean {\n  return Math.random() <= samplingRate;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getIidPromise } from './iid_service';\nimport { getConfig } from './remote_config_service';\nimport { Api } from './api_service';\n\nconst enum InitializationStatus {\n  notInitialized = 1,\n  initializationPending,\n  initialized\n}\n\nlet initializationStatus = InitializationStatus.notInitialized;\n\nlet initializationPromise: Promise<void> | undefined;\n\nexport function getInitializationPromise(): Promise<void> {\n  initializationStatus = InitializationStatus.initializationPending;\n\n  initializationPromise = initializationPromise || initializePerf();\n\n  return initializationPromise;\n}\n\nexport function isPerfInitialized(): boolean {\n  return initializationStatus === InitializationStatus.initialized;\n}\n\nfunction initializePerf(): Promise<void> {\n  return getDocumentReadyComplete()\n    .then(() => getIidPromise())\n    .then(iid => getConfig(iid))\n    .then(\n      () => changeInitializationStatus(),\n      () => changeInitializationStatus()\n    );\n}\n\n/**\n * Returns a promise which resolves whenever the document readystate is complete or\n * immediately if it is called after page load complete.\n */\nfunction getDocumentReadyComplete(): Promise<void> {\n  const document = Api.getInstance().document;\n  return new Promise(resolve => {\n    if (document && document.readyState !== 'complete') {\n      const handler = (): void => {\n        if (document.readyState === 'complete') {\n          document.removeEventListener('readystatechange', handler);\n          resolve();\n        }\n      };\n      document.addEventListener('readystatechange', handler);\n    } else {\n      resolve();\n    }\n  });\n}\n\nfunction changeInitializationStatus(): void {\n  initializationStatus = InitializationStatus.initialized;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogHandler, Logger, LogLevel } from '@firebase/logger';\nimport { SettingsService } from './settings_service';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport { consoleLogger } from '../utils/console_logger';\n\nconst DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\nconst INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\n// If end point does not work, the call will be tried for these many times.\nconst DEFAULT_REMAINING_TRIES = 3;\nlet remainingTries = DEFAULT_REMAINING_TRIES;\n\ninterface BatchEvent {\n  message: string;\n  eventTime: number;\n}\n\n/* eslint-disable camelcase */\n// CC accepted log format.\ninterface CcBatchLogFormat {\n  request_time_ms: string;\n  client_info: ClientInfo;\n  log_source: number;\n  log_event: Log[];\n}\n\ninterface ClientInfo {\n  client_type: number;\n  js_client_info: {};\n}\n\ninterface Log {\n  source_extension_json: string;\n  event_time_ms: string;\n}\n/* eslint-enable camelcase */\n\nlet queue: BatchEvent[] = [];\n\nfunction processQueue(timeOffset: number): void {\n  setTimeout(() => {\n    // If there is no remainingTries left, stop retrying.\n    if (remainingTries === 0) {\n      return;\n    }\n\n    // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\n    if (!queue.length) {\n      return processQueue(DEFAULT_SEND_INTERVAL_MS);\n    }\n\n    // Capture a snapshot of the queue and empty the \"official queue\".\n    const staged = [...queue];\n    queue = [];\n\n    /* eslint-disable camelcase */\n    // We will pass the JSON serialized event to the backend.\n    const log_event = staged.map(evt => ({\n      source_extension_json: evt.message,\n      event_time_ms: String(evt.eventTime)\n    }));\n\n    const data: CcBatchLogFormat = {\n      request_time_ms: String(Date.now()),\n      client_info: {\n        client_type: 1, // 1 is JS\n        js_client_info: {}\n      },\n      log_source: SettingsService.getInstance().logSource,\n      log_event\n    };\n    /* eslint-enable camelcase */\n\n    fetch(SettingsService.getInstance().logEndPointUrl, {\n      method: 'POST',\n      body: JSON.stringify(data)\n    })\n      .then(res => {\n        if (!res.ok) {\n          consoleLogger.info('Call to Firebase backend failed.');\n        }\n        return res.json();\n      })\n      .then(res => {\n        const wait = Number(res.next_request_wait_millis);\n\n        // Find the next call wait time from the response.\n        const requestOffset = isNaN(wait)\n          ? DEFAULT_SEND_INTERVAL_MS\n          : Math.max(DEFAULT_SEND_INTERVAL_MS, wait);\n        remainingTries = DEFAULT_REMAINING_TRIES;\n        // Schedule the next process.\n        processQueue(requestOffset);\n      })\n      .catch(() => {\n        /**\n         * If the request fails for some reason, add the events that were attempted\n         * back to the primary queue to retry later.\n         */\n        queue = [...staged, ...queue];\n        remainingTries--;\n        consoleLogger.info(`Tries left: ${remainingTries}.`);\n        processQueue(DEFAULT_SEND_INTERVAL_MS);\n      });\n  }, timeOffset);\n}\n\nprocessQueue(INITIAL_SEND_TIME_DELAY_MS);\n\nfunction addToQueue(evt: BatchEvent): void {\n  if (!evt.eventTime || !evt.message) {\n    throw ERROR_FACTORY.create(ErrorCode.INVALID_CC_LOG);\n  }\n  // Add the new event to the queue.\n  queue = [...queue, evt];\n}\n\n/** Log handler for cc service to send the performance logs to the server. */\nexport function ccHandler(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  serializer: (...args: any[]) => string\n): LogHandler {\n  // The underscores for loggerInstance and level parameters are added to avoid the\n  // noUnusedParameters related error.\n  return (_loggerInstance: Logger, _level: LogLevel, ...args) => {\n    const message = serializer(...args);\n    addToQueue({\n      message,\n      eventTime: Date.now()\n    });\n  };\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getIid } from './iid_service';\nimport { NetworkRequest } from '../resources/network_request';\nimport { Trace } from '../resources/trace';\nimport { Api } from './api_service';\nimport { SettingsService } from './settings_service';\nimport {\n  getServiceWorkerStatus,\n  getVisibilityState,\n  VisibilityState,\n  getEffectiveConnectionType\n} from '../utils/attributes_utils';\nimport {\n  isPerfInitialized,\n  getInitializationPromise\n} from './initialization_service';\nimport { Logger } from '@firebase/logger';\nimport { ccHandler } from './cc_service';\nimport { SDK_VERSION } from '../constants';\n\nconst enum ResourceType {\n  NetworkRequest,\n  Trace\n}\n\n/* eslint-disable camelcase */\ninterface ApplicationInfo {\n  google_app_id: string;\n  app_instance_id?: string;\n  web_app_info: WebAppInfo;\n  application_process_state: number;\n}\n\ninterface WebAppInfo {\n  sdk_version: string;\n  page_url: string;\n  service_worker_status: number;\n  visibility_state: number;\n  effective_connection_type: number;\n}\n\ninterface PerfNetworkLog {\n  application_info: ApplicationInfo;\n  network_request_metric: NetworkRequestMetric;\n}\n\ninterface PerfTraceLog {\n  application_info: ApplicationInfo;\n  trace_metric: TraceMetric;\n}\n\ninterface NetworkRequestMetric {\n  url: string;\n  http_method: number;\n  http_response_code: number;\n  response_payload_bytes?: number;\n  client_start_time_us?: number;\n  time_to_response_initiated_us?: number;\n  time_to_response_completed_us?: number;\n}\n\ninterface TraceMetric {\n  name: string;\n  is_auto: boolean;\n  client_start_time_us: number;\n  duration_us: number;\n  counters?: Array<{ key: string; value: number }>;\n  custom_attributes?: Array<{ key: string; value: string }>;\n}\n/* eslint-enble camelcase */\n\nlet logger: Logger | undefined;\n// This method is not called before initialization.\nfunction getLogger(): Logger {\n  if (logger) {\n    return logger;\n  }\n  const ccLogger = ccHandler(serializer);\n  logger = new Logger('@firebase/performance/cc');\n  logger.logHandler = ccLogger;\n  return logger;\n}\n\nexport function logTrace(trace: Trace): void {\n  const settingsService = SettingsService.getInstance();\n  // Do not log if trace is auto generated and instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled && trace.isAuto) {\n    return;\n  }\n  // Do not log if trace is custom and data collection is disabled.\n  if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\n    return;\n  }\n  // Do not log if required apis are not available.\n  if (!Api.getInstance().requiredApisAvailable()) {\n    return;\n  }\n  // Only log the page load auto traces if page is visible.\n  if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\n    return;\n  }\n\n  if (\n    !settingsService.loggingEnabled ||\n    !settingsService.logTraceAfterSampling\n  ) {\n    return;\n  }\n\n  if (isPerfInitialized()) {\n    sendTraceLog(trace);\n  } else {\n    // Custom traces can be used before the initialization but logging\n    // should wait until after.\n    getInitializationPromise().then(\n      () => sendTraceLog(trace),\n      () => sendTraceLog(trace)\n    );\n  }\n}\n\nfunction sendTraceLog(trace: Trace): void {\n  if (getIid()) {\n    setTimeout(() => getLogger().log(trace, ResourceType.Trace), 0);\n  }\n}\n\nexport function logNetworkRequest(networkRequest: NetworkRequest): void {\n  const settingsService = SettingsService.getInstance();\n  // Do not log network requests if instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled) {\n    return;\n  }\n  // Do not log the js sdk's call to cc service to avoid unnecessary cycle.\n  if (networkRequest.url === settingsService.logEndPointUrl.split('?')[0]) {\n    return;\n  }\n\n  if (\n    !settingsService.loggingEnabled ||\n    !settingsService.logNetworkAfterSampling\n  ) {\n    return;\n  }\n\n  setTimeout(\n    () => getLogger().log(networkRequest, ResourceType.NetworkRequest),\n    0\n  );\n}\n\nfunction serializer(resource: {}, resourceType: ResourceType): string {\n  if (resourceType === ResourceType.NetworkRequest) {\n    return serializeNetworkRequest(resource as NetworkRequest);\n  }\n  return serializeTrace(resource as Trace);\n}\n\nfunction serializeNetworkRequest(networkRequest: NetworkRequest): string {\n  const networkRequestMetric: NetworkRequestMetric = {\n    url: networkRequest.url,\n    http_method: networkRequest.httpMethod || 0,\n    http_response_code: 200,\n    response_payload_bytes: networkRequest.responsePayloadBytes,\n    client_start_time_us: networkRequest.startTimeUs,\n    time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\n    time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\n  };\n  const perfMetric: PerfNetworkLog = {\n    application_info: getApplicationInfo(),\n    network_request_metric: networkRequestMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction serializeTrace(trace: Trace): string {\n  const traceMetric: TraceMetric = {\n    name: trace.name,\n    is_auto: trace.isAuto,\n    client_start_time_us: trace.startTimeUs,\n    duration_us: trace.durationUs\n  };\n\n  if (Object.keys(trace.counters).length !== 0) {\n    traceMetric.counters = convertToKeyValueArray(trace.counters);\n  }\n  const customAttributes = trace.getAttributes();\n  if (Object.keys(customAttributes).length !== 0) {\n    traceMetric.custom_attributes = convertToKeyValueArray(customAttributes);\n  }\n\n  const perfMetric: PerfTraceLog = {\n    application_info: getApplicationInfo(),\n    trace_metric: traceMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction getApplicationInfo(): ApplicationInfo {\n  return {\n    google_app_id: SettingsService.getInstance().getAppId(),\n    app_instance_id: getIid(),\n    web_app_info: {\n      sdk_version: SDK_VERSION,\n      page_url: Api.getInstance().getUrl(),\n      service_worker_status: getServiceWorkerStatus(),\n      visibility_state: getVisibilityState(),\n      effective_connection_type: getEffectiveConnectionType()\n    },\n    application_process_state: 0\n  };\n}\n\nfunction convertToKeyValueArray<T>(obj: {\n  [key: string]: T;\n}): Array<{\n  key: string;\n  value: T;\n}> {\n  const keys = Object.keys(obj);\n  return keys.map(key => ({ key, value: obj[key] }));\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FIRST_PAINT_COUNTER_NAME,\n  FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n  FIRST_INPUT_DELAY_COUNTER_NAME,\n  OOB_TRACE_PAGE_LOAD_PREFIX\n} from '../constants';\n\nconst MAX_METRIC_NAME_LENGTH = 100;\nconst RESERVED_AUTO_PREFIX = '_';\nconst oobMetrics = [\n  FIRST_PAINT_COUNTER_NAME,\n  FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n  FIRST_INPUT_DELAY_COUNTER_NAME\n];\n\n/**\n * Returns true if the metric is custom and does not start with reserved prefix, or if\n * the metric is one of out of the box page load trace metrics.\n */\nexport function isValidMetricName(name: string, traceName?: string): boolean {\n  if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\n    return false;\n  }\n  return (\n    (traceName &&\n      traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) &&\n      oobMetrics.indexOf(name) > -1) ||\n    !name.startsWith(RESERVED_AUTO_PREFIX)\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  TRACE_START_MARK_PREFIX,\n  TRACE_STOP_MARK_PREFIX,\n  TRACE_MEASURE_PREFIX,\n  OOB_TRACE_PAGE_LOAD_PREFIX,\n  FIRST_PAINT_COUNTER_NAME,\n  FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n  FIRST_INPUT_DELAY_COUNTER_NAME\n} from '../constants';\nimport { Api } from '../services/api_service';\nimport { logTrace } from '../services/perf_logger';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport {\n  isValidCustomAttributeName,\n  isValidCustomAttributeValue\n} from '../utils/attributes_utils';\nimport { isValidMetricName } from '../utils/metric_utils';\nimport { PerformanceTrace } from '@firebase/performance-types';\n\nconst enum TraceState {\n  UNINITIALIZED = 1,\n  RUNNING,\n  TERMINATED\n}\n\nexport class Trace implements PerformanceTrace {\n  private state: TraceState = TraceState.UNINITIALIZED;\n  startTimeUs!: number;\n  durationUs!: number;\n  private customAttributes: { [key: string]: string } = {};\n  counters: { [counterName: string]: number } = {};\n  private api = Api.getInstance();\n  private randomId = Math.floor(Math.random() * 1000000);\n  private traceStartMark!: string;\n  private traceStopMark!: string;\n  private traceMeasure!: string;\n\n  /**\n   * @param name The name of the trace.\n   * @param isAuto If the trace is auto-instrumented.\n   * @param traceMeasureName The name of the measure marker in user timing specification. This field\n   * is only set when the trace is built for logging when the user directly uses the user timing\n   * api (performance.mark and performance.measure).\n   */\n  constructor(\n    readonly name: string,\n    readonly isAuto = false,\n    traceMeasureName?: string\n  ) {\n    if (!this.isAuto) {\n      this.traceStartMark = `${TRACE_START_MARK_PREFIX}-${this.randomId}-${this.name}`;\n      this.traceStopMark = `${TRACE_STOP_MARK_PREFIX}-${this.randomId}-${this.name}`;\n      this.traceMeasure =\n        traceMeasureName ||\n        `${TRACE_MEASURE_PREFIX}-${this.randomId}-${this.name}`;\n\n      if (traceMeasureName) {\n        // For the case of direct user timing traces, no start stop will happen. The measure object\n        // is already available.\n        this.calculateTraceMetrics();\n      }\n    }\n  }\n\n  /**\n   * Starts a trace. The measurement of the duration starts at this point.\n   */\n  start(): void {\n    if (this.state !== TraceState.UNINITIALIZED) {\n      throw ERROR_FACTORY.create(ErrorCode.TRACE_STARTED_BEFORE, {\n        traceName: this.name\n      });\n    }\n    this.api.mark(this.traceStartMark);\n    this.state = TraceState.RUNNING;\n  }\n\n  /**\n   * Stops the trace. The measurement of the duration of the trace stops at this point and trace\n   * is logged.\n   */\n  stop(): void {\n    if (this.state !== TraceState.RUNNING) {\n      throw ERROR_FACTORY.create(ErrorCode.TRACE_STOPPED_BEFORE, {\n        traceName: this.name\n      });\n    }\n    this.state = TraceState.TERMINATED;\n    this.api.mark(this.traceStopMark);\n    this.api.measure(\n      this.traceMeasure,\n      this.traceStartMark,\n      this.traceStopMark\n    );\n    this.calculateTraceMetrics();\n    logTrace(this);\n  }\n\n  /**\n   * Records a trace with predetermined values. If this method is used a trace is created and logged\n   * directly. No need to use start and stop methods.\n   * @param startTime Trace start time since epoch in millisec\n   * @param duration The duraction of the trace in millisec\n   * @param options An object which can optionally hold maps of custom metrics and custom attributes\n   */\n  record(\n    startTime: number,\n    duration: number,\n    options?: {\n      metrics?: { [key: string]: number };\n      attributes?: { [key: string]: string };\n    }\n  ): void {\n    this.durationUs = Math.floor(duration * 1000);\n    this.startTimeUs = Math.floor(startTime * 1000);\n    if (options && options.attributes) {\n      this.customAttributes = { ...options.attributes };\n    }\n    if (options && options.metrics) {\n      for (const metric of Object.keys(options.metrics)) {\n        if (!isNaN(Number(options.metrics[metric]))) {\n          this.counters[metric] = Number(Math.floor(options.metrics[metric]));\n        }\n      }\n    }\n    logTrace(this);\n  }\n\n  /**\n   * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\n   * custom metric if one with the given name does not exist.\n   * @param counter Name of the custom metric\n   * @param num Increment by value\n   */\n  incrementMetric(counter: string, num = 1): void {\n    if (this.counters[counter] === undefined) {\n      this.putMetric(counter, 0);\n    }\n    this.counters[counter] += num;\n  }\n\n  /**\n   * Sets a custom metric to a specified value. Will create a new custom metric if one with the\n   * given name does not exist.\n   * @param counter Name of the custom metric\n   * @param num Set custom metric to this value\n   */\n  putMetric(counter: string, num: number): void {\n    if (isValidMetricName(counter, this.name)) {\n      this.counters[counter] = num;\n    } else {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_CUSTOM_METRIC_NAME, {\n        customMetricName: counter\n      });\n    }\n  }\n\n  /**\n   * Returns the value of the custom metric by that name. If a custom metric with that name does\n   * not exist will return zero.\n   * @param counter\n   */\n  getMetric(counter: string): number {\n    return this.counters[counter] || 0;\n  }\n\n  /**\n   * Sets a custom attribute of a trace to a certain value.\n   * @param attr\n   * @param value\n   */\n  putAttribute(attr: string, value: string): void {\n    const isValidName = isValidCustomAttributeName(attr);\n    const isValidValue = isValidCustomAttributeValue(value);\n    if (isValidName && isValidValue) {\n      this.customAttributes[attr] = value;\n      return;\n    }\n    // Throw appropriate error when the attribute name or value is invalid.\n    if (!isValidName) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_ATTRIBUTE_NAME, {\n        attributeName: attr\n      });\n    }\n    if (!isValidValue) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_ATTRIBUTE_VALUE, {\n        attributeValue: value\n      });\n    }\n  }\n\n  /**\n   * Retrieves the value a custom attribute of a trace is set to.\n   * @param attr\n   */\n  getAttribute(attr: string): string | undefined {\n    return this.customAttributes[attr];\n  }\n\n  removeAttribute(attr: string): void {\n    if (this.customAttributes[attr] === undefined) {\n      return;\n    }\n    delete this.customAttributes[attr];\n  }\n\n  getAttributes(): { [key: string]: string } {\n    return { ...this.customAttributes };\n  }\n\n  private setStartTime(startTime: number): void {\n    this.startTimeUs = startTime;\n  }\n\n  private setDuration(duration: number): void {\n    this.durationUs = duration;\n  }\n\n  /**\n   * Calculates and assigns the duration and start time of the trace using the measure performance\n   * entry.\n   */\n  private calculateTraceMetrics(): void {\n    const perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\n    const perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\n    if (perfMeasureEntry) {\n      this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\n      this.startTimeUs = Math.floor(\n        (perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000\n      );\n    }\n  }\n\n  /**\n   * @param navigationTimings A single element array which contains the navigationTIming object of\n   * the page load\n   * @param paintTimings A array which contains paintTiming object of the page load\n   * @param firstInputDelay First input delay in millisec\n   */\n  static createOobTrace(\n    navigationTimings: PerformanceNavigationTiming[],\n    paintTimings: PerformanceEntry[],\n    firstInputDelay?: number\n  ): void {\n    const route = Api.getInstance().getUrl();\n    if (!route) {\n      return;\n    }\n    const trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\n    const timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\n    trace.setStartTime(timeOriginUs);\n\n    // navigationTimings includes only one element.\n    if (navigationTimings && navigationTimings[0]) {\n      trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\n      trace.putMetric(\n        'domInteractive',\n        Math.floor(navigationTimings[0].domInteractive * 1000)\n      );\n      trace.putMetric(\n        'domContentLoadedEventEnd',\n        Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000)\n      );\n      trace.putMetric(\n        'loadEventEnd',\n        Math.floor(navigationTimings[0].loadEventEnd * 1000)\n      );\n    }\n\n    const FIRST_PAINT = 'first-paint';\n    const FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\n    if (paintTimings) {\n      const firstPaint = paintTimings.find(\n        paintObject => paintObject.name === FIRST_PAINT\n      );\n      if (firstPaint && firstPaint.startTime) {\n        trace.putMetric(\n          FIRST_PAINT_COUNTER_NAME,\n          Math.floor(firstPaint.startTime * 1000)\n        );\n      }\n      const firstContentfulPaint = paintTimings.find(\n        paintObject => paintObject.name === FIRST_CONTENTFUL_PAINT\n      );\n      if (firstContentfulPaint && firstContentfulPaint.startTime) {\n        trace.putMetric(\n          FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n          Math.floor(firstContentfulPaint.startTime * 1000)\n        );\n      }\n\n      if (firstInputDelay) {\n        trace.putMetric(\n          FIRST_INPUT_DELAY_COUNTER_NAME,\n          Math.floor(firstInputDelay * 1000)\n        );\n      }\n    }\n\n    logTrace(trace);\n  }\n\n  static createUserTimingTrace(measureName: string): void {\n    const trace = new Trace(measureName, false, measureName);\n    logTrace(trace);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Api } from '../services/api_service';\nimport { logNetworkRequest } from '../services/perf_logger';\n\n// The order of values of this enum should not be changed.\nexport const enum HttpMethod {\n  HTTP_METHOD_UNKNOWN = 0,\n  GET = 1,\n  PUT = 2,\n  POST = 3,\n  DELETE = 4,\n  HEAD = 5,\n  PATCH = 6,\n  OPTIONS = 7,\n  TRACE = 8,\n  CONNECT = 9\n}\n\n// Durations are in microseconds.\nexport interface NetworkRequest {\n  url: string;\n  httpMethod?: HttpMethod;\n  requestPayloadBytes?: number;\n  responsePayloadBytes?: number;\n  httpResponseCode?: number;\n  responseContentType?: string;\n  startTimeUs?: number;\n  timeToRequestCompletedUs?: number;\n  timeToResponseInitiatedUs?: number;\n  timeToResponseCompletedUs?: number;\n}\n\nexport function createNetworkRequestEntry(entry: PerformanceEntry): void {\n  const performanceEntry = entry as PerformanceResourceTiming;\n  if (!performanceEntry || performanceEntry.responseStart === undefined) {\n    return;\n  }\n  const timeOrigin = Api.getInstance().getTimeOrigin();\n  const startTimeUs = Math.floor(\n    (performanceEntry.startTime + timeOrigin) * 1000\n  );\n  const timeToResponseInitiatedUs = performanceEntry.responseStart\n    ? Math.floor(\n        (performanceEntry.responseStart - performanceEntry.startTime) * 1000\n      )\n    : undefined;\n  const timeToResponseCompletedUs = Math.floor(\n    (performanceEntry.responseEnd - performanceEntry.startTime) * 1000\n  );\n  // Remove the query params from logged network request url.\n  const url = performanceEntry.name && performanceEntry.name.split('?')[0];\n  const networkRequest: NetworkRequest = {\n    url,\n    responsePayloadBytes: performanceEntry.transferSize,\n    startTimeUs,\n    timeToResponseInitiatedUs,\n    timeToResponseCompletedUs\n  };\n\n  logNetworkRequest(networkRequest);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Api } from './api_service';\nimport { Trace } from '../resources/trace';\nimport { createNetworkRequestEntry } from '../resources/network_request';\nimport { TRACE_MEASURE_PREFIX } from '../constants';\nimport { getIid } from './iid_service';\n\nconst FID_WAIT_TIME_MS = 5000;\n\nexport function setupOobResources(): void {\n  // Do not initialize unless iid is available.\n  if (!getIid()) {\n    return;\n  }\n  // The load event might not have fired yet, and that means performance navigation timing\n  // object has a duration of 0. The setup should run after all current tasks in js queue.\n  setTimeout(() => setupOobTraces(), 0);\n  setTimeout(() => setupNetworkRequests(), 0);\n  setTimeout(() => setupUserTimingTraces(), 0);\n}\n\nfunction setupNetworkRequests(): void {\n  const api = Api.getInstance();\n  const resources = api.getEntriesByType('resource');\n  for (const resource of resources) {\n    createNetworkRequestEntry(resource);\n  }\n  api.setupObserver('resource', createNetworkRequestEntry);\n}\n\nfunction setupOobTraces(): void {\n  const api = Api.getInstance();\n  const navigationTimings = api.getEntriesByType(\n    'navigation'\n  ) as PerformanceNavigationTiming[];\n  const paintTimings = api.getEntriesByType('paint');\n  // If First Input Desly polyfill is added to the page, report the fid value.\n  // https://github.com/GoogleChromeLabs/first-input-delay\n  if (api.onFirstInputDelay) {\n    // If the fid call back is not called for certain time, continue without it.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let timeoutId: any = setTimeout(() => {\n      Trace.createOobTrace(navigationTimings, paintTimings);\n      timeoutId = undefined;\n    }, FID_WAIT_TIME_MS);\n    api.onFirstInputDelay((fid: number) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n        Trace.createOobTrace(navigationTimings, paintTimings, fid);\n      }\n    });\n  } else {\n    Trace.createOobTrace(navigationTimings, paintTimings);\n  }\n}\n\nfunction setupUserTimingTraces(): void {\n  const api = Api.getInstance();\n  // Run through the measure performance entries collected up to this point.\n  const measures = api.getEntriesByType('measure');\n  for (const measure of measures) {\n    createUserTimingTrace(measure);\n  }\n  // Setup an observer to capture the measures from this point on.\n  api.setupObserver('measure', createUserTimingTrace);\n}\n\nfunction createUserTimingTrace(measure: PerformanceEntry): void {\n  const measureName = measure.name;\n  // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\n  if (\n    measureName.substring(0, TRACE_MEASURE_PREFIX.length) ===\n    TRACE_MEASURE_PREFIX\n  ) {\n    return;\n  }\n  Trace.createUserTimingTrace(measureName);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Trace } from '../resources/trace';\nimport { setupOobResources } from '../services/oob_resources_service';\nimport { SettingsService } from '../services/settings_service';\nimport { getInitializationPromise } from '../services/initialization_service';\nimport { Api } from '../services/api_service';\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebasePerformance } from '@firebase/performance-types';\nimport { consoleLogger } from '../utils/console_logger';\n\nexport class PerformanceController implements FirebasePerformance {\n  constructor(readonly app: FirebaseApp) {\n    if (Api.getInstance().requiredApisAvailable()) {\n      getInitializationPromise().then(setupOobResources, setupOobResources);\n    } else {\n      consoleLogger.info(\n        'Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.'\n      );\n    }\n  }\n\n  trace(name: string): Trace {\n    return new Trace(name);\n  }\n\n  set instrumentationEnabled(val: boolean) {\n    SettingsService.getInstance().instrumentationEnabled = val;\n  }\n  get instrumentationEnabled(): boolean {\n    return SettingsService.getInstance().instrumentationEnabled;\n  }\n\n  set dataCollectionEnabled(val: boolean) {\n    SettingsService.getInstance().dataCollectionEnabled = val;\n  }\n  get dataCollectionEnabled(): boolean {\n    return SettingsService.getInstance().dataCollectionEnabled;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport '@firebase/installations';\nimport { FirebaseApp, FirebaseNamespace } from '@firebase/app-types';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\nimport { PerformanceController } from './src/controllers/perf';\nimport { setupApi } from './src/services/api_service';\nimport { SettingsService } from './src/services/settings_service';\nimport { ERROR_FACTORY, ErrorCode } from './src/utils/errors';\nimport { FirebasePerformance } from '@firebase/performance-types';\nimport { Component, ComponentType } from '@firebase/component';\nimport { FirebaseInstallations } from '@firebase/installations-types';\n\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport function registerPerformance(instance: FirebaseNamespace): void {\n  const factoryMethod = (\n    app: FirebaseApp,\n    installations: FirebaseInstallations\n  ): PerformanceController => {\n    if (app.name !== DEFAULT_ENTRY_NAME) {\n      throw ERROR_FACTORY.create(ErrorCode.FB_NOT_DEFAULT);\n    }\n    if (typeof window === 'undefined') {\n      throw ERROR_FACTORY.create(ErrorCode.NO_WINDOW);\n    }\n    setupApi(window);\n    SettingsService.getInstance().firebaseAppInstance = app;\n    SettingsService.getInstance().installationsService = installations;\n    return new PerformanceController(app);\n  };\n\n  // Register performance with firebase-app.\n  (instance as _FirebaseNamespace).INTERNAL.registerComponent(\n    new Component(\n      'performance',\n      container => {\n        /* Dependencies */\n        // getImmediate for FirebaseApp will always succeed\n        const app = container.getProvider('app').getImmediate();\n        // The following call will always succeed because perf has `import '@firebase/installations'`\n        const installations = container\n          .getProvider('installations')\n          .getImmediate();\n\n        return factoryMethod(app, installations);\n      },\n      ComponentType.PUBLIC\n    )\n  );\n}\n\nregisterPerformance(firebase);\n\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    performance?: {\n      (app?: FirebaseApp): FirebasePerformance;\n    };\n  }\n  interface FirebaseApp {\n    performance?(): FirebasePerformance;\n  }\n}\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","__read","r","ar","error","__spreadArrays","il","k","a","j","jl","deepExtend","target","source","constructor","Date","getTime","undefined","prop","Deferred","callback","_this","promise","catch","Error","create","__","code","message","_super","FirebaseError","captureStackTrace","ErrorFactory","_i","data","customData","fullCode","service","template","errors","replace","PATTERN","key","toString","replaceTemplate","fullMessage","serviceName","_b","keys","_a","slice","console","warn","contains","obj","Component","mode","instantiationMode","multipleInstances","props","serviceProps","name","instanceFactory","type","DEFAULT_ENTRY_NAME","Provider","identifier","normalizedIdentifier","normalizeInstanceIdentifier","instancesDeferred","has","deferred","set","instance","getOrInitializeService","get","options","optional","component","isComponentEager","entries","_d","instanceIdentifier","instanceDeferred","delete","instances","services","from","values","all","filter","map","INTERNAL","container","normalizeIdentifierForFactory","Map","LogLevel","ComponentContainer","provider","getProvider","isComponentSet","setComponent","providers","addComponent","defaultLogHandler","logType","args","logLevel","now","toISOString","DEBUG","VERBOSE","log","INFO","info","WARN","ERROR","defaultLogLevel","Logger","_logLevel","val","_logHandler","ERRORS","ERROR_FACTORY","FirebaseAppLiteImpl","checkDestroyed_","automaticDataCollectionEnabled_","name_","options_","firebase_","removeApp","getProviders","isDeleted_","getImmediate","appName","config","automaticDataCollectionEnabled","deepCopy","components","logger","createFirebaseNamespaceCore","firebaseAppImpl","apps","namespace","__esModule","initializeApp","rawConfig","String","app","SDK_VERSION","version","registerComponent","componentName","debug","serviceNamespace","appArg","_getService","bind","_addComponent","useAsService","defineProperty","firebase","createFirebaseNamespaceLite","promisifyRequest","request","onsuccess","onerror","promisifyRequestCall","method","proxyProperties","ProxyClass","targetProp","properties","forEach","proxyRequestMethods","Constructor","proxyMethods","proxyCursorRequestMethods","Cursor","promisifyCursorRequestCall","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","arr","toArray","nativeObject","getAll","query","count","items","iterateCursor","continue","PENDING_TIMEOUT_MS","PACKAGE_VERSION","INTERNAL_AUTH_VERSION","INSTALLATIONS_API_URL","TOKEN_EXPIRATION_BUFFER","ERROR_DESCRIPTION_MAP","isServerError","includes","extractAppConfig","getMissingValueError","configKeys_1","keyName","projectId","apiKey","appId","valueName","getInstallationsEndpoint","extractAuthTokenInfoFromResponse","response","token","requestStatus","expiresIn","responseExpiresIn","Number","getExpiresInFromResponseExpiresIn","creationTime","getErrorFromResponse","requestName","json","responseJson","errorData","serverCode","serverMessage","serverStatus","status","getHeaders","Headers","Content-Type","Accept","x-goog-api-key","getHeadersWithAuth","appConfig","refreshToken","headers","append","getAuthorizationHeader","retryIfServerError","fn","sleep","ms","setTimeout","bufferToBase64UrlSafe","array","btoa","fromCharCode","concat","VALID_FID_PATTERN","INVALID_FID","generateFid","fidByteArray","Uint8Array","self","crypto","msCrypto","getRandomValues","fid","substr","encode","test","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","getDbPromise","upgradeCallback","indexedDB","onupgradeneeded","event","openDb","upgradeDB","getKey","tx","put","remove","update","updateFn","oldValue","newValue","getInstallationEntry","oldEntry","installationEntry","clearTimedOutRequest","registrationStatus","updateOrCreateInstallationEntry","entryWithPromise","registrationPromise","updateInstallationRequest","entry","waitUntilFidRegistration","navigator","onLine","registrationPromiseWithError","inProgressEntry","registrationTime","endpoint","authVersion","sdkVersion","JSON","stringify","fetch","ok","responseValue","authToken","createInstallation","registeredInstallationEntry","e_1","registerInstallation","triggerRegistrationIfNecessary","hasInstallationRequestTimedOut","generateAuthToken","getGenerateAuthTokenEndpoint","installation","refreshAuthToken","forceRefresh","isEntryRegistered","oldAuthToken","isAuthTokenExpired","isAuthTokenValid","tokenPromise","updateAuthTokenRequest","waitUntilAuthTokenRequest","inProgressAuthToken","requestTime","makeAuthTokenRequestInProgressEntry","updatedInstallationEntry","fetchAuthTokenFromServer","hasAuthTokenRequestTimedOut","getToken","completeInstallationRegistration","deleteInstallation","getDeleteEndpoint","getId","deleteInstallationRequest","apiInstance","windowInstance","settingsServiceInstance","TRACE_MEASURE_PREFIX","CONFIG_LOCAL_STORAGE_KEY","CONFIG_EXPIRY_LOCAL_STORAGE_KEY","SERVICE_NAME","Api","windowLocation","href","split","performance","mark","measureName","mark1","mark2","measure","getEntriesByType","getEntriesByName","timeOrigin","timing","navigationStart","cookieEnabled","entryType","PerformanceObserver","list","getEntries","observe","entryTypes","window","location","document","localStorage","perfMetrics","onFirstInputDelay","iid","VisibilityState","SettingsService","firebaseAppInstance","getIid","RESERVED_ATTRIBUTE_PREFIXES","ATTRIBUTE_FORMAT_REGEX","RegExp","getVisibilityState","getInstance","visibilityState","VISIBLE","HIDDEN","UNKNOWN","consoleLogger","REMOTE_CONFIG_SDK_VERSION","SECONDARY_CONFIGS","loggingEnabled","FIS_AUTH_PREFIX","getConfig","expiryString","getItem","expiry","configValid","configStringified","parse","getStoredConfig","processConfig","authTokenPromise","installationsService","authTokenVal","getAuthTokenPromise","configEndPoint","getProjectId","getApiKey","Request","Authorization","app_instance_id","app_instance_id_token","app_id","getAppId","app_version","sdk_version","COULD_NOT_GET_CONFIG_MSG","getRemoteConfig","setItem","configTimeToLive","storeConfig","fpr_enabled","fpr_log_source","logSource","fpr_log_endpoint_url","logEndPointUrl","fpr_vc_network_request_sampling_rate","networkRequestsSamplingRate","fpr_vc_trace_sampling_rate","tracesSamplingRate","logTraceAfterSampling","shouldLogAfterSampling","logNetworkAfterSampling","samplingRate","Math","random","initializationPromise","initializationStatus","getInitializationPromise","readyState","handler_1","removeEventListener","addEventListener","getDocumentReadyComplete","iidPromise","iidVal","getIidPromise","changeInitializationStatus","DEFAULT_SEND_INTERVAL_MS","DEFAULT_REMAINING_TRIES","remainingTries","queue","ccHandler","serializer","_loggerInstance","_level","evt","eventTime","addToQueue","getLogger","ccLogger","logHandler","logTrace","trace","settingsService","instrumentationEnabled","isAuto","dataCollectionEnabled","requiredApisAvailable","sendTraceLog","resource","resourceType","networkRequest","networkRequestMetric","url","http_method","httpMethod","http_response_code","response_payload_bytes","responsePayloadBytes","client_start_time_us","startTimeUs","time_to_response_initiated_us","timeToResponseInitiatedUs","time_to_response_completed_us","timeToResponseCompletedUs","perfMetric","application_info","getApplicationInfo","network_request_metric","serializeNetworkRequest","traceMetric","is_auto","duration_us","durationUs","counters","convertToKeyValueArray","customAttributes","getAttributes","custom_attributes","trace_metric","serializeTrace","google_app_id","web_app_info","page_url","getUrl","service_worker_status","serviceWorker","controller","getServiceWorkerStatus","visibility_state","effective_connection_type","navigatorConnection","connection","effectiveType","getEffectiveConnectionType","application_process_state","processQueue","timeOffset","staged","log_event","source_extension_json","event_time_ms","request_time_ms","client_info","client_type","js_client_info","log_source","res","wait","next_request_wait_millis","requestOffset","isNaN","max","oobMetrics","Trace","state","traceName","api","traceStartMark","traceStopMark","traceMeasure","calculateTraceMetrics","startTime","duration","floor","attributes","metrics","metric","counter","num","putMetric","startsWith","indexOf","isValidMetricName","customMetricName","attr","isValidName","some","prefix","match","isValidCustomAttributeName","isValidValue","isValidCustomAttributeValue","attributeName","attributeValue","perfMeasureEntries","perfMeasureEntry","getTimeOrigin","navigationTimings","paintTimings","firstInputDelay","route","timeOriginUs","setStartTime","setDuration","domInteractive","domContentLoadedEventEnd","loadEventEnd","firstPaint","find","paintObject","firstContentfulPaint","traceMeasureName","TRACE_START_MARK_PREFIX","randomId","TRACE_STOP_MARK_PREFIX","createNetworkRequestEntry","performanceEntry","responseStart","responseEnd","logNetworkRequest","transferSize","FID_WAIT_TIME_MS","setupOobResources","timeoutId_1","createOobTrace","clearTimeout","setupOobTraces","resources","resources_1","setupObserver","setupNetworkRequests","measures","measures_1","createUserTimingTrace","setupUserTimingTraces","substring","PerformanceController","factoryMethod","installations","setupApi"],"mappings":"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"}